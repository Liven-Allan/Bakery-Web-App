{"ast":null,"code":"var _jsxFileName = \"/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/layout/dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\n/* src/layout/dashboard/Dashboard.js */\n\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [stockLevels, setStockLevels] = useState([]);\n  const [totalCosts, setTotalCosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/historical-data/');\n        const fetchedData = response.data;\n\n        // Aggregate data by date and calculate total quantity\n        const aggregatedData = {};\n        fetchedData.forEach(item => {\n          const {\n            date,\n            product,\n            quantity,\n            unit_price\n          } = item;\n          if (!aggregatedData[date]) {\n            aggregatedData[date] = {\n              products: {},\n              total_cost: 0\n            };\n          }\n          if (!aggregatedData[date].products[product]) {\n            aggregatedData[date].products[product] = 0;\n          }\n          aggregatedData[date].products[product] += quantity;\n          aggregatedData[date].total_cost += quantity * parseFloat(unit_price);\n        });\n\n        // Convert aggregated data to array format for the line chart\n        const formattedData = Object.entries(aggregatedData).map(([date, values]) => ({\n          date,\n          total_quantity: Object.values(values.products).reduce((a, b) => a + b, 0)\n        }));\n        setData(formattedData);\n\n        // Convert aggregated data to array format for the stock levels table\n        const formattedStockLevels = Object.entries(aggregatedData).flatMap(([date, values]) => Object.entries(values.products).map(([product, quantity]) => ({\n          date,\n          product,\n          quantity\n        })));\n        setStockLevels(formattedStockLevels);\n\n        // Convert aggregated data to array format for the total cost view\n        const formattedTotalCosts = Object.entries(aggregatedData).map(([date, values]) => ({\n          date,\n          total_cost: values.total_cost.toFixed(2) // Format as a fixed-point number\n        }));\n        setTotalCosts(formattedTotalCosts);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Custom tooltip content for line chart\n  const CustomTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const {\n        date,\n        total_quantity\n      } = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Date: ${date}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Total Quantity: ${total_quantity}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Inventory Trends Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"total_quantity\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-levels-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stock Levels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"stock-levels-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stockLevels.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-costs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Total Costs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"total-costs-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: totalCosts.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"shs: \", item.total_cost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"aoasSYCAKBBHuWGlUGJNOw8PqUE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","stockLevels","setStockLevels","totalCosts","setTotalCosts","fetchData","response","get","fetchedData","aggregatedData","forEach","item","date","product","quantity","unit_price","products","total_cost","parseFloat","formattedData","Object","entries","map","values","total_quantity","reduce","a","b","formattedStockLevels","flatMap","formattedTotalCosts","toFixed","error","console","CustomTooltip","active","payload","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","content","type","stroke","index","_c","$RefreshReg$"],"sources":["/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/layout/dashboard/Dashboard.js"],"sourcesContent":["/* src/layout/dashboard/Dashboard.js */\n\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);\n  const [stockLevels, setStockLevels] = useState([]);\n  const [totalCosts, setTotalCosts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/historical-data/');\n        const fetchedData = response.data;\n\n        // Aggregate data by date and calculate total quantity\n        const aggregatedData = {};\n        fetchedData.forEach(item => {\n          const { date, product, quantity, unit_price } = item;\n          if (!aggregatedData[date]) {\n            aggregatedData[date] = {\n              products: {},\n              total_cost: 0\n            };\n          }\n          if (!aggregatedData[date].products[product]) {\n            aggregatedData[date].products[product] = 0;\n          }\n          aggregatedData[date].products[product] += quantity;\n          aggregatedData[date].total_cost += quantity * parseFloat(unit_price);\n        });\n\n        // Convert aggregated data to array format for the line chart\n        const formattedData = Object.entries(aggregatedData).map(([date, values]) => ({\n          date,\n          total_quantity: Object.values(values.products).reduce((a, b) => a + b, 0),\n        }));\n        setData(formattedData);\n\n        // Convert aggregated data to array format for the stock levels table\n        const formattedStockLevels = Object.entries(aggregatedData).flatMap(([date, values]) =>\n          Object.entries(values.products).map(([product, quantity]) => ({\n            date,\n            product,\n            quantity,\n          }))\n        );\n        setStockLevels(formattedStockLevels);\n\n        // Convert aggregated data to array format for the total cost view\n        const formattedTotalCosts = Object.entries(aggregatedData).map(([date, values]) => ({\n          date,\n          total_cost: values.total_cost.toFixed(2),  // Format as a fixed-point number\n        }));\n        setTotalCosts(formattedTotalCosts);\n\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n\n  // Custom tooltip content for line chart\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const { date, total_quantity } = payload[0].payload;\n      return (\n        <div className=\"custom-tooltip\">\n          <p>{`Date: ${date}`}</p>\n          <p>{`Total Quantity: ${total_quantity}`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n\n  return (\n    <div className=\"dashboard\">\n       <h2>Dashboard</h2>\n      <div className=\"chart-container\">\n      <h2>Inventory Trends Over Time</h2>\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip content={<CustomTooltip />} />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"total_quantity\" stroke=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      <div className=\"stock-levels-container\">\n        <h2>Stock Levels</h2>\n        <table className=\"stock-levels-table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Product</th>\n              <th>Quantity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {stockLevels.map((item, index) => (\n              <tr key={index}>\n                <td>{item.date}</td>\n                <td>{item.product}</td>\n                <td>{item.quantity}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"total-costs-container\">\n        <h2>Total Costs</h2>\n        <table className=\"total-costs-table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Total Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {totalCosts.map((item, index) => (\n              <tr key={index}>\n                <td>{item.date}</td>\n                <td>shs: {item.total_cost}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}