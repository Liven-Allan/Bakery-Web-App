{"ast":null,"code":"// src/inventoryService.js\nimport axios from'axios';const API_BASE_URL='http://localhost:8000/api';// Replace with your Django API base URL\n// Fetch all inventory items\nexport const getInventoryItems=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/inventory/\"));return response.data;}catch(error){console.error('Error fetching inventory items:',error);throw error;}};// Add a new inventory item\nexport const addInventoryItem=async item=>{try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/inventory/\"),item);return response.data;}catch(error){console.error('Error adding inventory item:',error);throw error;}};// Record a transaction\nexport const recordTransaction=async transaction=>{try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/transactions/\"),transaction);return response.data;}catch(error){console.error('Error recording transaction:',error);throw error;}};// Optionally, you can add more functions for updating and deleting items\n// Update an existing inventory item\nexport const updateInventoryItem=async(itemId,item)=>{try{const response=await axios.put(\"\".concat(API_BASE_URL,\"/inventory/\").concat(itemId,\"/\"),item);return response.data;}catch(error){console.error('Error updating inventory item:',error);throw error;}};// Delete an inventory item\nexport const deleteInventoryItem=async itemId=>{try{await axios.delete(\"\".concat(API_BASE_URL,\"/inventory/\").concat(itemId,\"/\"));}catch(error){console.error('Error deleting inventory item:',error);throw error;}};// Fetch transactions for a specific inventory item\nexport const getItemTransactions=async itemId=>{try{const[inventoryResponse,transactionsResponse]=await Promise.all([axios.get(\"\".concat(API_BASE_URL,\"/inventory/\").concat(itemId,\"/\")),axios.get(\"\".concat(API_BASE_URL,\"/transactions/?product=\").concat(itemId))]);return{inventory:inventoryResponse.data,transactions:transactionsResponse.data};}catch(error){console.error('Error fetching item transactions:',error);throw error;}};","map":{"version":3,"names":["axios","API_BASE_URL","getInventoryItems","response","get","concat","data","error","console","addInventoryItem","item","post","recordTransaction","transaction","updateInventoryItem","itemId","put","deleteInventoryItem","delete","getItemTransactions","inventoryResponse","transactionsResponse","Promise","all","inventory","transactions"],"sources":["/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/layout/inventoryService.js"],"sourcesContent":["// src/inventoryService.js\n\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000/api'; // Replace with your Django API base URL\n\n// Fetch all inventory items\nexport const getInventoryItems = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/inventory/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inventory items:', error);\n    throw error;\n  }\n};\n\n// Add a new inventory item\nexport const addInventoryItem = async (item) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/inventory/`, item);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding inventory item:', error);\n    throw error;\n  }\n};\n\n// Record a transaction\nexport const recordTransaction = async (transaction) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/transactions/`, transaction);\n    return response.data;\n  } catch (error) {\n    console.error('Error recording transaction:', error);\n    throw error;\n  }\n};\n\n// Optionally, you can add more functions for updating and deleting items\n\n// Update an existing inventory item\nexport const updateInventoryItem = async (itemId, item) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/inventory/${itemId}/`, item);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating inventory item:', error);\n    throw error;\n  }\n};\n\n// Delete an inventory item\nexport const deleteInventoryItem = async (itemId) => {\n  try {\n    await axios.delete(`${API_BASE_URL}/inventory/${itemId}/`);\n  } catch (error) {\n    console.error('Error deleting inventory item:', error);\n    throw error;\n  }\n};\n\n// Fetch transactions for a specific inventory item\nexport const getItemTransactions = async (itemId) => {\n  try {\n    const [inventoryResponse, transactionsResponse] = await Promise.all([\n      axios.get(`${API_BASE_URL}/inventory/${itemId}/`),\n      axios.get(`${API_BASE_URL}/transactions/?product=${itemId}`)\n    ]);\n    return {\n      inventory: inventoryResponse.data,\n      transactions: transactionsResponse.data\n    };\n  } catch (error) {\n    console.error('Error fetching item transactions:', error);\n    throw error;\n  }\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}