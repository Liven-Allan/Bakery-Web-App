{"ast":null,"code":"// src/inventoryService.js\n\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api'; // Replace with your Django API base URL\n\n// Fetch all inventory items\nexport const getInventoryItems = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/inventory/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inventory items:', error);\n    throw error;\n  }\n};\n\n// Add a new inventory item\nexport const addInventoryItem = async item => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/inventory/`, item);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding inventory item:', error);\n    throw error;\n  }\n};\n\n// Record a transaction\nexport const recordTransaction = async transaction => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/transactions/`, transaction);\n    return response.data;\n  } catch (error) {\n    console.error('Error recording transaction:', error);\n    throw error;\n  }\n};\n\n// Optionally, you can add more functions for updating and deleting items\n\n// Update an existing inventory item\nexport const updateInventoryItem = async (itemId, item) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/inventory/${itemId}/`, item);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating inventory item:', error);\n    throw error;\n  }\n};\n\n// Delete an inventory item\nexport const deleteInventoryItem = async itemId => {\n  try {\n    await axios.delete(`${API_BASE_URL}/inventory/${itemId}/`);\n  } catch (error) {\n    console.error('Error deleting inventory item:', error);\n    throw error;\n  }\n};\n\n// Fetch transactions for a specific inventory item\n\nexport const getItemTransactions = async itemId => {\n  try {\n    const [inventoryResponse, transactionsResponse] = await Promise.all([axios.get(`${API_BASE_URL}/inventory/${itemId}/`), axios.get(`${API_BASE_URL}/transactions/?product=${itemId}`)]);\n    return {\n      inventory: inventoryResponse.data,\n      transactions: transactionsResponse.data\n    };\n  } catch (error) {\n    console.error('Error fetching item transactions:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getInventoryItems","response","get","data","error","console","addInventoryItem","item","post","recordTransaction","transaction","updateInventoryItem","itemId","put","deleteInventoryItem","delete","getItemTransactions","inventoryResponse","transactionsResponse","Promise","all","inventory","transactions"],"sources":["/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/layout/inventoryService.js"],"sourcesContent":["// src/inventoryService.js\n\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000/api'; // Replace with your Django API base URL\n\n// Fetch all inventory items\nexport const getInventoryItems = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/inventory/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inventory items:', error);\n    throw error;\n  }\n};\n\n// Add a new inventory item\nexport const addInventoryItem = async (item) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/inventory/`, item);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding inventory item:', error);\n    throw error;\n  }\n};\n\n// Record a transaction\nexport const recordTransaction = async (transaction) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/transactions/`, transaction);\n    return response.data;\n  } catch (error) {\n    console.error('Error recording transaction:', error);\n    throw error;\n  }\n};\n\n// Optionally, you can add more functions for updating and deleting items\n\n// Update an existing inventory item\nexport const updateInventoryItem = async (itemId, item) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/inventory/${itemId}/`, item);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating inventory item:', error);\n    throw error;\n  }\n};\n\n// Delete an inventory item\nexport const deleteInventoryItem = async (itemId) => {\n  try {\n    await axios.delete(`${API_BASE_URL}/inventory/${itemId}/`);\n  } catch (error) {\n    console.error('Error deleting inventory item:', error);\n    throw error;\n  }\n};\n\n// Fetch transactions for a specific inventory item\n\nexport const getItemTransactions = async (itemId) => {\n  try {\n    const [inventoryResponse, transactionsResponse] = await Promise.all([\n      axios.get(`${API_BASE_URL}/inventory/${itemId}/`),\n      axios.get(`${API_BASE_URL}/transactions/?product=${itemId}`)\n    ]);\n    return {\n      inventory: inventoryResponse.data,\n      transactions: transactionsResponse.data\n    };\n  } catch (error) {\n    console.error('Error fetching item transactions:', error);\n    throw error;\n  }\n};\n\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,aAAa,CAAC;IAC9D,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EAC9C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,YAAY,aAAa,EAAEQ,IAAI,CAAC;IACrE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,iBAAiB,GAAG,MAAOC,WAAW,IAAK;EACtD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,YAAY,gBAAgB,EAAEW,WAAW,CAAC;IAC/E,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;;AAEA;AACA,OAAO,MAAMO,mBAAmB,GAAG,MAAAA,CAAOC,MAAM,EAAEL,IAAI,KAAK;EACzD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACe,GAAG,CAAC,GAAGd,YAAY,cAAca,MAAM,GAAG,EAAEL,IAAI,CAAC;IAC9E,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,mBAAmB,GAAG,MAAOF,MAAM,IAAK;EACnD,IAAI;IACF,MAAMd,KAAK,CAACiB,MAAM,CAAC,GAAGhB,YAAY,cAAca,MAAM,GAAG,CAAC;EAC5D,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;;AAEA,OAAO,MAAMY,mBAAmB,GAAG,MAAOJ,MAAM,IAAK;EACnD,IAAI;IACF,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClEtB,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,cAAca,MAAM,GAAG,CAAC,EACjDd,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,0BAA0Ba,MAAM,EAAE,CAAC,CAC7D,CAAC;IACF,OAAO;MACLS,SAAS,EAAEJ,iBAAiB,CAACd,IAAI;MACjCmB,YAAY,EAAEJ,oBAAoB,CAACf;IACrC,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}