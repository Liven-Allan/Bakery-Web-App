{"ast":null,"code":"var _jsxFileName = \"/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/production_layout/production_list/ProductionList.js\",\n  _s = $RefreshSig$();\n/* src/production_layout/production_list/ProductionList.js */\n\nimport React, { useState } from 'react';\nimport AddProductionModal from '../../productionModal/AddProductionModal'; // Import the AddProductionModal component\nimport RawMaterialModal from '../../productionModal/RawMaterialModal'; // Import the RawMaterialModal component\nimport './ProductionList.css'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductionList = () => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false); // State to manage the modal open/close\n  const [rawMaterialModalIsOpen, setRawMaterialModalIsOpen] = useState(false); // State to manage raw material modal open/close\n  const [productions, setProductions] = useState([]); // State to manage production entries\n  const [selectedProduct, setSelectedProduct] = useState(null); // State to track the currently selected product for adding raw materials\n\n  const [rawMaterials, setRawMaterials] = useState([{\n    id: 7,\n    name: \"Ginger\"\n  }, {\n    id: 9,\n    name: \"Sugar\"\n  }, {\n    id: 10,\n    name: \"Flour\"\n  }]); // Mock data for raw materials\n\n  const handleOpenModal = () => {\n    setModalIsOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalIsOpen(false);\n  };\n  const handleAddProduction = productName => {\n    setProductions([...productions, {\n      name: productName,\n      rawMaterials: []\n    }]);\n    handleCloseModal(); // Close the modal after adding the production\n  };\n  const handleOpenRawMaterialModal = product => {\n    setSelectedProduct(product);\n    setRawMaterialModalIsOpen(true);\n  };\n  const handleCloseRawMaterialModal = () => {\n    setRawMaterialModalIsOpen(false);\n    setSelectedProduct(null); // Reset the selected product when closing the modal\n  };\n  const handleAddRawMaterial = (productName, rawMaterialName, quantity) => {\n    setProductions(productions.map(production => production.name === productName ? {\n      ...production,\n      rawMaterials: [...production.rawMaterials, {\n        name: rawMaterialName,\n        quantity\n      }]\n    } : production));\n    handleCloseRawMaterialModal(); // Close the raw material modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Production List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenModal,\n      children: \"Add New Production\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddProductionModal, {\n      isOpen: modalIsOpen,\n      onRequestClose: handleCloseModal,\n      onAddProduction: handleAddProduction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), selectedProduct && /*#__PURE__*/_jsxDEV(RawMaterialModal, {\n      isOpen: rawMaterialModalIsOpen,\n      onRequestClose: handleCloseRawMaterialModal,\n      rawMaterials: rawMaterials,\n      productName: selectedProduct.name,\n      onAddRawMaterial: handleAddRawMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"production-list\",\n      children: productions.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"production-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Product:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleOpenRawMaterialModal(product),\n            children: \"Select Raw Materials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: \"Record Production\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), product.rawMaterials.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"raw-materials-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Raw Material\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: product.rawMaterials.map((rm, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: rm.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: rm.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductionList, \"ZIr2iZIWeJ1ZzNzcu02CY3yfRPk=\");\n_c = ProductionList;\nexport default ProductionList;\nvar _c;\n$RefreshReg$(_c, \"ProductionList\");","map":{"version":3,"names":["React","useState","AddProductionModal","RawMaterialModal","jsxDEV","_jsxDEV","ProductionList","_s","modalIsOpen","setModalIsOpen","rawMaterialModalIsOpen","setRawMaterialModalIsOpen","productions","setProductions","selectedProduct","setSelectedProduct","rawMaterials","setRawMaterials","id","name","handleOpenModal","handleCloseModal","handleAddProduction","productName","handleOpenRawMaterialModal","product","handleCloseRawMaterialModal","handleAddRawMaterial","rawMaterialName","quantity","map","production","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","onAddProduction","onAddRawMaterial","className","index","type","length","rm","idx","_c","$RefreshReg$"],"sources":["/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/production_layout/production_list/ProductionList.js"],"sourcesContent":["/* src/production_layout/production_list/ProductionList.js */\n\nimport React, { useState } from 'react';\nimport AddProductionModal from '../../productionModal/AddProductionModal'; // Import the AddProductionModal component\nimport RawMaterialModal from '../../productionModal/RawMaterialModal'; // Import the RawMaterialModal component\nimport './ProductionList.css'; // Ensure this path is correct\n\nconst ProductionList = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false); // State to manage the modal open/close\n  const [rawMaterialModalIsOpen, setRawMaterialModalIsOpen] = useState(false); // State to manage raw material modal open/close\n  const [productions, setProductions] = useState([]); // State to manage production entries\n  const [selectedProduct, setSelectedProduct] = useState(null); // State to track the currently selected product for adding raw materials\n\n  const [rawMaterials, setRawMaterials] = useState([\n    { id: 7, name: \"Ginger\" },\n    { id: 9, name: \"Sugar\" },\n    { id: 10, name: \"Flour\" }\n  ]); // Mock data for raw materials\n\n  const handleOpenModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const handleAddProduction = (productName) => {\n    setProductions([...productions, { name: productName, rawMaterials: [] }]);\n    handleCloseModal(); // Close the modal after adding the production\n  };\n\n  const handleOpenRawMaterialModal = (product) => {\n    setSelectedProduct(product);\n    setRawMaterialModalIsOpen(true);\n  };\n\n  const handleCloseRawMaterialModal = () => {\n    setRawMaterialModalIsOpen(false);\n    setSelectedProduct(null); // Reset the selected product when closing the modal\n  };\n\n  const handleAddRawMaterial = (productName, rawMaterialName, quantity) => {\n    setProductions(productions.map(production =>\n      production.name === productName\n        ? { ...production, rawMaterials: [...production.rawMaterials, { name: rawMaterialName, quantity }] }\n        : production\n    ));\n    handleCloseRawMaterialModal(); // Close the raw material modal\n  };\n\n  return (\n    <div>\n      <h2>Production List</h2>\n      <button onClick={handleOpenModal}>Add New Production</button>\n      <AddProductionModal\n        isOpen={modalIsOpen}\n        onRequestClose={handleCloseModal}\n        onAddProduction={handleAddProduction}\n      />\n      {selectedProduct && (\n        <RawMaterialModal\n          isOpen={rawMaterialModalIsOpen}\n          onRequestClose={handleCloseRawMaterialModal}\n          rawMaterials={rawMaterials}\n          productName={selectedProduct.name}\n          onAddRawMaterial={handleAddRawMaterial}\n        />\n      )}\n      <div className=\"production-list\">\n        {productions.map((product, index) => (\n          <div key={index} className=\"production-item\">\n            <div className=\"product-container\">\n              <h3>Product:</h3>\n              <p>{product.name}</p>\n            </div>\n            <div className=\"actions-container\">\n              <button type=\"button\" onClick={() => handleOpenRawMaterialModal(product)}>Select Raw Materials</button>\n              <button type=\"button\">Record Production</button>\n            </div>\n            {product.rawMaterials.length > 0 && (\n              <div className=\"raw-materials-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Raw Material</th>\n                      <th>Quantity</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {product.rawMaterials.map((rm, idx) => (\n                      <tr key={idx}>\n                        <td>{rm.name}</td>\n                        <td>{rm.quantity}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductionList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}