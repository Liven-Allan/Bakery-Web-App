{"ast":null,"code":"var _jsxFileName = \"/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/modal/invnetory_list_modal/TransactionModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { getItemTransactions } from '../../layout/inventoryService';\nimport './TransactionModal.css'; // Ensure you have this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // For accessibility\n\nconst TransactionModal = ({\n  isOpen,\n  onRequestClose,\n  itemId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [inventory, setInventory] = useState(null);\n  useEffect(() => {\n    if (itemId) {\n      getItemTransactions(itemId).then(data => {\n        setInventory(data.inventory);\n        // Filter transactions to only include those for the selected item\n        const filteredTransactions = data.transactions.filter(transaction => transaction.product === itemId);\n        setTransactions(filteredTransactions);\n      }).catch(error => console.error('Error fetching transactions:', error));\n    }\n  }, [itemId, isOpen]);\n\n  // Function to calculate the total cost for a transaction\n  const calculateTotalCost = (quantity, unitPrice) => {\n    return (quantity * parseFloat(unitPrice)).toFixed(2);\n  };\n\n  // Process transactions to maintain running total\n  const processTransactions = () => {\n    let runningQuantity = 0;\n    return transactions.map(transaction => {\n      if (transaction.transaction_type === 'Addition') {\n        runningQuantity += transaction.quantity;\n      } else if (transaction.transaction_type === 'Update') {\n        runningQuantity = transaction.quantity; // Update to new quantity\n      }\n      return {\n        ...transaction,\n        runningQuantity,\n        totalCost: calculateTotalCost(runningQuantity, transaction.unit_price)\n      };\n    });\n  };\n  const processedTransactions = processTransactions();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    contentLabel: \"Item Transactions\",\n    className: \"modal\",\n    overlayClassName: \"overlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transaction Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), inventory && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: processedTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: inventory.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.runningQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"shs:\", transaction.totalCost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(transaction.transaction_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"close-button\",\n      onClick: onRequestClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionModal, \"8KU4xO/3UWQh16gy2Lmw+8Cq6lE=\");\n_c = TransactionModal;\nexport default TransactionModal;\nvar _c;\n$RefreshReg$(_c, \"TransactionModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","getItemTransactions","jsxDEV","_jsxDEV","setAppElement","TransactionModal","isOpen","onRequestClose","itemId","_s","transactions","setTransactions","inventory","setInventory","then","data","filteredTransactions","filter","transaction","product","catch","error","console","calculateTotalCost","quantity","unitPrice","parseFloat","toFixed","processTransactions","runningQuantity","map","transaction_type","totalCost","unit_price","processedTransactions","contentLabel","className","overlayClassName","children","fileName","_jsxFileName","lineNumber","columnNumber","name","Date","transaction_date","toLocaleDateString","id","type","onClick","_c","$RefreshReg$"],"sources":["/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/modal/invnetory_list_modal/TransactionModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { getItemTransactions } from '../../layout/inventoryService';\nimport './TransactionModal.css'; // Ensure you have this CSS file\n\nModal.setAppElement('#root'); // For accessibility\n\nconst TransactionModal = ({ isOpen, onRequestClose, itemId }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [inventory, setInventory] = useState(null);\n\n  useEffect(() => {\n    if (itemId) {\n      getItemTransactions(itemId)\n        .then(data => {\n          setInventory(data.inventory);\n          // Filter transactions to only include those for the selected item\n          const filteredTransactions = data.transactions.filter(transaction => transaction.product === itemId);\n          setTransactions(filteredTransactions);\n        })\n        .catch(error => console.error('Error fetching transactions:', error));\n    }\n  }, [itemId, isOpen]);\n\n  // Function to calculate the total cost for a transaction\n  const calculateTotalCost = (quantity, unitPrice) => {\n    return (quantity * parseFloat(unitPrice)).toFixed(2);\n  };\n\n  // Process transactions to maintain running total\n  const processTransactions = () => {\n    let runningQuantity = 0;\n    return transactions.map(transaction => {\n      if (transaction.transaction_type === 'Addition') {\n        runningQuantity += transaction.quantity;\n      } else if (transaction.transaction_type === 'Update') {\n        runningQuantity = transaction.quantity; // Update to new quantity\n      }\n      return {\n        ...transaction,\n        runningQuantity,\n        totalCost: calculateTotalCost(runningQuantity, transaction.unit_price)\n      };\n    });\n  };\n\n  const processedTransactions = processTransactions();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      contentLabel=\"Item Transactions\"\n      className=\"modal\"\n      overlayClassName=\"overlay\"\n    >\n      <div className=\"modal-header\">\n        <h2>Transaction Details</h2>\n      </div>\n      {inventory && (\n        <table>\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th>Quantity</th>\n              <th>Total Cost</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {processedTransactions.map(transaction => (\n              <tr key={transaction.id}>\n                <td>{inventory.name}</td>\n                <td>{transaction.runningQuantity}</td>\n                <td>shs:{transaction.totalCost}</td>\n                <td>{new Date(transaction.transaction_date).toLocaleDateString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <button type=\"button\" className=\"close-button\" onClick={onRequestClose}>Close</button>\n    </Modal>\n  );\n};\n\nexport default TransactionModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjCH,KAAK,CAACI,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;;AAE9B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,EAAE;MACVP,mBAAmB,CAACO,MAAM,CAAC,CACxBM,IAAI,CAACC,IAAI,IAAI;QACZF,YAAY,CAACE,IAAI,CAACH,SAAS,CAAC;QAC5B;QACA,MAAMI,oBAAoB,GAAGD,IAAI,CAACL,YAAY,CAACO,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACC,OAAO,KAAKX,MAAM,CAAC;QACpGG,eAAe,CAACK,oBAAoB,CAAC;MACvC,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;IACzE;EACF,CAAC,EAAE,CAACb,MAAM,EAAEF,MAAM,CAAC,CAAC;;EAEpB;EACA,MAAMiB,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;IAClD,OAAO,CAACD,QAAQ,GAAGE,UAAU,CAACD,SAAS,CAAC,EAAEE,OAAO,CAAC,CAAC,CAAC;EACtD,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,eAAe,GAAG,CAAC;IACvB,OAAOnB,YAAY,CAACoB,GAAG,CAACZ,WAAW,IAAI;MACrC,IAAIA,WAAW,CAACa,gBAAgB,KAAK,UAAU,EAAE;QAC/CF,eAAe,IAAIX,WAAW,CAACM,QAAQ;MACzC,CAAC,MAAM,IAAIN,WAAW,CAACa,gBAAgB,KAAK,QAAQ,EAAE;QACpDF,eAAe,GAAGX,WAAW,CAACM,QAAQ,CAAC,CAAC;MAC1C;MACA,OAAO;QACL,GAAGN,WAAW;QACdW,eAAe;QACfG,SAAS,EAAET,kBAAkB,CAACM,eAAe,EAAEX,WAAW,CAACe,UAAU;MACvE,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,qBAAqB,GAAGN,mBAAmB,CAAC,CAAC;EAEnD,oBACEzB,OAAA,CAACH,KAAK;IACJM,MAAM,EAAEA,MAAO;IACfC,cAAc,EAAEA,cAAe;IAC/B4B,YAAY,EAAC,mBAAmB;IAChCC,SAAS,EAAC,OAAO;IACjBC,gBAAgB,EAAC,SAAS;IAAAC,QAAA,gBAE1BnC,OAAA;MAAKiC,SAAS,EAAC,cAAc;MAAAE,QAAA,eAC3BnC,OAAA;QAAAmC,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EACL9B,SAAS,iBACRT,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,eACEnC,OAAA;UAAAmC,QAAA,gBACEnC,OAAA;YAAAmC,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBvC,OAAA;YAAAmC,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBvC,OAAA;YAAAmC,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBvC,OAAA;YAAAmC,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRvC,OAAA;QAAAmC,QAAA,EACGJ,qBAAqB,CAACJ,GAAG,CAACZ,WAAW,iBACpCf,OAAA;UAAAmC,QAAA,gBACEnC,OAAA;YAAAmC,QAAA,EAAK1B,SAAS,CAAC+B;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBvC,OAAA;YAAAmC,QAAA,EAAKpB,WAAW,CAACW;UAAe;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtCvC,OAAA;YAAAmC,QAAA,GAAI,MAAI,EAACpB,WAAW,CAACc,SAAS;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpCvC,OAAA;YAAAmC,QAAA,EAAK,IAAIM,IAAI,CAAC1B,WAAW,CAAC2B,gBAAgB,CAAC,CAACC,kBAAkB,CAAC;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJ/DxB,WAAW,CAAC6B,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKnB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR,eACDvC,OAAA;MAAQ6C,IAAI,EAAC,QAAQ;MAACZ,SAAS,EAAC,cAAc;MAACa,OAAO,EAAE1C,cAAe;MAAA+B,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEZ,CAAC;AAACjC,EAAA,CA7EIJ,gBAAgB;AAAA6C,EAAA,GAAhB7C,gBAAgB;AA+EtB,eAAeA,gBAAgB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}