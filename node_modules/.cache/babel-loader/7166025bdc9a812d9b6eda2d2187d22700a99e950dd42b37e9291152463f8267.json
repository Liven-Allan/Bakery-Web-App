{"ast":null,"code":"var _jsxFileName = \"/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/production_layout/production_list/ProductionList.js\",\n  _s = $RefreshSig$();\n/* src/production_layout/production_list/ProductionList.js */\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddEditProductionForm from '../../productionModal/AddEditProductionForm';\nimport './ProductionList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000/api/productions/'; // Adjust the URL as needed\n\nconst ProductionList = () => {\n  _s();\n  const [productions, setProductions] = useState([]);\n  const [editingProduction, setEditingProduction] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  // Function to fetch and set production records\n  const fetchProductions = async () => {\n    try {\n      const response = await axios.get(API_URL);\n      console.log('Fetched productions:', response.data); // Log the fetched data\n      setProductions(response.data);\n    } catch (error) {\n      console.error('Error fetching productions:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProductions(); // Fetch data on component mount\n  }, []);\n  const handleAddClick = () => {\n    setEditingProduction(null); // For adding a new record\n    setShowForm(true);\n  };\n  const handleEditClick = production => {\n    setEditingProduction(production); // For editing an existing record\n    setShowForm(true);\n  };\n  const handleSave = async production => {\n    try {\n      if (editingProduction) {\n        // Update existing record\n        await axios.put(`${API_URL}${editingProduction.id}/`, production);\n      } else {\n        // Add new record\n        await axios.post(API_URL, production);\n      }\n      // Re-fetch the list of productions after save\n      fetchProductions();\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error saving production record:', error);\n    }\n  };\n  const handleCancel = () => {\n    setShowForm(false);\n  };\n  const handleDelete = async productionID => {\n    if (window.confirm('Are you sure you want to delete this record?')) {\n      try {\n        await axios.delete(`${API_URL}${productionID}/`);\n        // Re-fetch the list of productions after delete\n        fetchProductions();\n      } catch (error) {\n        console.error('Error deleting production record:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Production List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddClick,\n      children: \"Add New Production Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(AddEditProductionForm, {\n      production: editingProduction,\n      onSave: handleSave,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Production ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Raw Material ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity Produced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity Used\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Production Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: productions.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.productID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.rawMaterialID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.quantityProduced\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.quantityUsed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.productionDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(record),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(record.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, record.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductionList, \"b5Ya8Ihy/eGJe+WEyZkoa2f5XYk=\");\n_c = ProductionList;\nexport default ProductionList;\nvar _c;\n$RefreshReg$(_c, \"ProductionList\");","map":{"version":3,"names":["React","useState","useEffect","axios","AddEditProductionForm","jsxDEV","_jsxDEV","API_URL","ProductionList","_s","productions","setProductions","editingProduction","setEditingProduction","showForm","setShowForm","fetchProductions","response","get","console","log","data","error","handleAddClick","handleEditClick","production","handleSave","put","id","post","handleCancel","handleDelete","productionID","window","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSave","onCancel","map","record","productID","rawMaterialID","quantityProduced","quantityUsed","productionDate","_c","$RefreshReg$"],"sources":["/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/production_layout/production_list/ProductionList.js"],"sourcesContent":["/* src/production_layout/production_list/ProductionList.js */\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddEditProductionForm from '../../productionModal/AddEditProductionForm';\nimport './ProductionList.css';\n\nconst API_URL = 'http://localhost:8000/api/productions/'; // Adjust the URL as needed\n\nconst ProductionList = () => {\n  const [productions, setProductions] = useState([]);\n  const [editingProduction, setEditingProduction] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  // Function to fetch and set production records\n  const fetchProductions = async () => {\n    try {\n      const response = await axios.get(API_URL);\n      console.log('Fetched productions:', response.data); // Log the fetched data\n      setProductions(response.data);\n    } catch (error) {\n      console.error('Error fetching productions:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProductions(); // Fetch data on component mount\n  }, []);\n\n  const handleAddClick = () => {\n    setEditingProduction(null); // For adding a new record\n    setShowForm(true);\n  };\n\n  const handleEditClick = (production) => {\n    setEditingProduction(production); // For editing an existing record\n    setShowForm(true);\n  };\n\n  const handleSave = async (production) => {\n    try {\n      if (editingProduction) {\n        // Update existing record\n        await axios.put(`${API_URL}${editingProduction.id}/`, production);\n      } else {\n        // Add new record\n        await axios.post(API_URL, production);\n      }\n      // Re-fetch the list of productions after save\n      fetchProductions();\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error saving production record:', error);\n    }\n  };\n\n  const handleCancel = () => {\n    setShowForm(false);\n  };\n\n  const handleDelete = async (productionID) => {\n    if (window.confirm('Are you sure you want to delete this record?')) {\n      try {\n        await axios.delete(`${API_URL}${productionID}/`);\n        // Re-fetch the list of productions after delete\n        fetchProductions();\n      } catch (error) {\n        console.error('Error deleting production record:', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>Production List</h2>\n      <button onClick={handleAddClick}>Add New Production Record</button>\n      {showForm && (\n        <AddEditProductionForm\n          production={editingProduction}\n          onSave={handleSave}\n          onCancel={handleCancel}\n        />\n      )}\n      <table>\n        <thead>\n          <tr>\n            <th>Production ID</th>\n            <th>Product ID</th>\n            <th>Raw Material ID</th>\n            <th>Quantity Produced</th>\n            <th>Quantity Used</th>\n            <th>Production Date</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {productions.map(record => (\n            <tr key={record.id}>\n              <td>{record.id}</td>\n              <td>{record.productID}</td>\n              <td>{record.rawMaterialID}</td>\n              <td>{record.quantityProduced}</td>\n              <td>{record.quantityUsed}</td>\n              <td>{record.productionDate}</td>\n              <td>\n                <button onClick={() => handleEditClick(record)}>Edit</button>\n                <button onClick={() => handleDelete(record.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ProductionList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}