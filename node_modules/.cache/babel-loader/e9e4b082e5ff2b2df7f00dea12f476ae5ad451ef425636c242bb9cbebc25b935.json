{"ast":null,"code":"var _jsxFileName = \"/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/layout/dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/layout/dashboard/Dashboard.js\n\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/historical-data/');\n        const fetchedData = response.data;\n\n        // Aggregate data\n        const aggregatedData = {};\n        fetchedData.forEach(item => {\n          const key = `${item.date}-${item.product}`;\n          if (!aggregatedData[key]) {\n            aggregatedData[key] = {\n              date: item.date,\n              product: item.product,\n              quantity: 0\n            };\n          }\n          aggregatedData[key].quantity += item.quantity;\n        });\n\n        // Convert aggregated data to array format\n        const formattedData = Object.values(aggregatedData);\n        setData(formattedData);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Custom tooltip content\n  const CustomTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const {\n        date,\n        quantity,\n        product\n      } = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Date: ${date}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Product: ${product}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Quantity: ${quantity}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inventory Trends Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), Array.from(new Set(data.map(item => item.product))).map(product => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"quantity\",\n          stroke: \"#8884d8\",\n          dot: false,\n          name: product,\n          data: data.filter(item => item.product === product)\n        }, product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","fetchData","response","get","fetchedData","aggregatedData","forEach","item","key","date","product","quantity","formattedData","Object","values","error","console","CustomTooltip","active","payload","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","content","Array","from","Set","map","type","stroke","dot","name","filter","_c","$RefreshReg$"],"sources":["/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/layout/dashboard/Dashboard.js"],"sourcesContent":["// src/layout/dashboard/Dashboard.js\n\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/historical-data/');\n        const fetchedData = response.data;\n\n        // Aggregate data\n        const aggregatedData = {};\n        fetchedData.forEach(item => {\n          const key = `${item.date}-${item.product}`;\n          if (!aggregatedData[key]) {\n            aggregatedData[key] = {\n              date: item.date,\n              product: item.product,\n              quantity: 0\n            };\n          }\n          aggregatedData[key].quantity += item.quantity;\n        });\n\n        // Convert aggregated data to array format\n        const formattedData = Object.values(aggregatedData);\n\n        setData(formattedData);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Custom tooltip content\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const { date, quantity, product } = payload[0].payload;\n      return (\n        <div className=\"custom-tooltip\">\n          <p>{`Date: ${date}`}</p>\n          <p>{`Product: ${product}`}</p>\n          <p>{`Quantity: ${quantity}`}</p>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div>\n      <h2>Inventory Trends Over Time</h2>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <Tooltip content={<CustomTooltip />} />\n          <Legend />\n          {/* Create a line for each product */}\n          {Array.from(new Set(data.map(item => item.product))).map(product => (\n            <Line\n              key={product}\n              type=\"monotone\"\n              dataKey=\"quantity\"\n              stroke=\"#8884d8\"\n              dot={false}\n              name={product}\n              data={data.filter(item => item.product === product)}\n            />\n          ))}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}