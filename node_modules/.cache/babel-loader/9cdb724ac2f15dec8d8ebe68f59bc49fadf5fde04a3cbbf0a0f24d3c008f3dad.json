{"ast":null,"code":"// src/InventoryList.js\nimport React,{useState,useEffect}from'react';import{getInventoryItems,addInventoryItem,recordTransaction,deleteInventoryItem,updateInventoryItem}from'./inventoryService';import InventoryModal from'../modal/InventoryModal';import TransactionModal from'../modal/TransactionModal';// Import TransactionModal\nimport EditInventoryModal from'../modal/EditInventoryModal';import'./InventoryList.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InventoryList=()=>{const[modalIsOpen,setModalIsOpen]=useState(false);const[transactionModalIsOpen,setTransactionModalIsOpen]=useState(false);// State for TransactionModal\nconst[editModalIsOpen,setEditModalIsOpen]=useState(false);const[inventory,setInventory]=useState([]);const[selectedItemId,setSelectedItemId]=useState(null);// State for selected item ID\nconst[selectedItem,setSelectedItem]=useState(null);// State for selected item for editing\nuseEffect(()=>{// Fetch inventory items from Django\ngetInventoryItems().then(data=>setInventory(data)).catch(error=>console.error('Error fetching inventory:',error));},[]);const handleOpenModal=()=>{setModalIsOpen(true);};const handleCloseModal=()=>{setModalIsOpen(false);};const handleOpenEditModal=item=>{console.log('Opening edit modal for item:',item);// Debug statement\nsetSelectedItem(item);setEditModalIsOpen(true);};const handleCloseEditModal=()=>{setEditModalIsOpen(false);setSelectedItem(null);};const handleSave=item=>{addInventoryItem(item).then(data=>{setInventory([...inventory,data]);// Record the transaction\nrecordTransaction({product:data.id,transaction_type:'Addition',quantity:item.reorder_level,// Use reorder_level as quantity\nremarks:'Item added'}).catch(error=>console.error('Error recording transaction:',error));setModalIsOpen(false);}).catch(error=>console.error('Error adding inventory item:',error));};const handleUpdate=item=>{updateInventoryItem(item.id,item).then(()=>{setInventory(inventory.map(i=>i.id===item.id?item:i));setEditModalIsOpen(false);setSelectedItem(null);}).catch(error=>console.error('Error updating inventory item:',error));};const handleDelete=async id=>{if(window.confirm('Are you sure you want to delete this item?')){try{await deleteInventoryItem(id);setInventory(inventory.filter(item=>item.id!==id));}catch(error){console.error('Error deleting inventory item:',error);}}};const handleView=itemId=>{setSelectedItemId(itemId);setTransactionModalIsOpen(true);};const handleCloseTransactionModal=()=>{setTransactionModalIsOpen(false);setSelectedItemId(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"inventory-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Inventory List\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleOpenModal,children:\"Add Item\"}),/*#__PURE__*/_jsx(InventoryModal,{isOpen:modalIsOpen,onRequestClose:handleCloseModal,onSave:handleSave}),/*#__PURE__*/_jsx(EditInventoryModal,{isOpen:editModalIsOpen,onRequestClose:handleCloseEditModal,selecteditem:selectedItem,onSave:handleUpdate}),/*#__PURE__*/_jsx(TransactionModal,{isOpen:transactionModalIsOpen,onRequestClose:handleCloseTransactionModal,itemId:selectedItemId}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Product ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Product Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Category\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Unit Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Stock Level\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Reorder Level\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:inventory.map(item=>{const unitPrice=parseFloat(item.unit_price);// Convert unit_price to a number\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[\" \",/*#__PURE__*/_jsx(\"td\",{children:item.id}),/*#__PURE__*/_jsx(\"td\",{children:item.name}),/*#__PURE__*/_jsx(\"td\",{children:item.category}),/*#__PURE__*/_jsxs(\"td\",{children:[\"shs:\",unitPrice?unitPrice.toFixed(2):'N/A']}),/*#__PURE__*/_jsx(\"td\",{children:item.stock_level}),/*#__PURE__*/_jsx(\"td\",{children:item.reorder_level}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"actions-button\",onClick:()=>handleView(item.id),children:\"View\"}),/*#__PURE__*/_jsx(\"button\",{className:\"actions-button\",onClick:()=>handleOpenEditModal(item),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"actions-button\",onClick:()=>handleDelete(item.id),children:\"Delete\"})]})]},item.id);})})]})]});};export default InventoryList;","map":{"version":3,"names":["React","useState","useEffect","getInventoryItems","addInventoryItem","recordTransaction","deleteInventoryItem","updateInventoryItem","InventoryModal","TransactionModal","EditInventoryModal","jsx","_jsx","jsxs","_jsxs","InventoryList","modalIsOpen","setModalIsOpen","transactionModalIsOpen","setTransactionModalIsOpen","editModalIsOpen","setEditModalIsOpen","inventory","setInventory","selectedItemId","setSelectedItemId","selectedItem","setSelectedItem","then","data","catch","error","console","handleOpenModal","handleCloseModal","handleOpenEditModal","item","log","handleCloseEditModal","handleSave","product","id","transaction_type","quantity","reorder_level","remarks","handleUpdate","map","i","handleDelete","window","confirm","filter","handleView","itemId","handleCloseTransactionModal","className","children","onClick","isOpen","onRequestClose","onSave","selecteditem","unitPrice","parseFloat","unit_price","name","category","toFixed","stock_level"],"sources":["/home/liven/Desktop/Vianny_Bakery/Vianny_Project/bakery-app/src/layout/InventoryList.js"],"sourcesContent":["// src/InventoryList.js\nimport React, { useState, useEffect } from 'react';\nimport { getInventoryItems, addInventoryItem, recordTransaction, deleteInventoryItem, updateInventoryItem } from './inventoryService';\nimport InventoryModal from '../modal/InventoryModal';\nimport TransactionModal from '../modal/TransactionModal'; // Import TransactionModal\nimport EditInventoryModal from '../modal/EditInventoryModal';\nimport './InventoryList.css';\n\nconst InventoryList = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [transactionModalIsOpen, setTransactionModalIsOpen] = useState(false); // State for TransactionModal\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [inventory, setInventory] = useState([]);\n  const [selectedItemId, setSelectedItemId] = useState(null); // State for selected item ID\n  const [selectedItem, setSelectedItem] = useState(null); // State for selected item for editing\n\n\n  useEffect(() => {\n    // Fetch inventory items from Django\n    getInventoryItems()\n      .then(data => setInventory(data))\n      .catch(error => console.error('Error fetching inventory:', error));\n  }, []);\n\n  const handleOpenModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const handleOpenEditModal = (item) => {\n    console.log('Opening edit modal for item:', item); // Debug statement\n    setSelectedItem(item);\n    setEditModalIsOpen(true);\n  };\n\n  const handleCloseEditModal = () => {\n    setEditModalIsOpen(false);\n    setSelectedItem(null);\n  };\n\n  const handleSave = (item) => {\n    addInventoryItem(item)\n      .then(data => {\n        setInventory([...inventory, data]);\n        // Record the transaction\n        recordTransaction({\n          product: data.id,\n          transaction_type: 'Addition',\n          quantity: item.reorder_level, // Use reorder_level as quantity\n          remarks: 'Item added'\n        })\n        .catch(error => console.error('Error recording transaction:', error));\n        setModalIsOpen(false);\n      })\n      .catch(error => console.error('Error adding inventory item:', error));\n  };\n\n  const handleUpdate = (item) => {\n    updateInventoryItem(item.id, item)\n      .then(() => {\n        setInventory(inventory.map(i => (i.id === item.id ? item : i)));\n        setEditModalIsOpen(false);\n        setSelectedItem(null);\n      })\n      .catch(error => console.error('Error updating inventory item:', error));\n  };\n\n  const handleDelete = async (id) => {\n    if (window.confirm('Are you sure you want to delete this item?')) {\n      try {\n        await deleteInventoryItem(id);\n        setInventory(inventory.filter(item => item.id !== id));\n      } catch (error) {\n        console.error('Error deleting inventory item:', error);\n      }\n    }\n  };\n\n  const handleView = (itemId) => {\n    setSelectedItemId(itemId);\n    setTransactionModalIsOpen(true);\n  };\n\n  const handleCloseTransactionModal = () => {\n    setTransactionModalIsOpen(false);\n    setSelectedItemId(null);\n  };\n\n  return (\n    <div className=\"inventory-list\">\n      <h2>Inventory List</h2>\n      <button onClick={handleOpenModal}>Add Item</button>\n      <InventoryModal\n        isOpen={modalIsOpen}\n        onRequestClose={handleCloseModal}\n        onSave={handleSave}\n      />\n      <EditInventoryModal\n        isOpen={editModalIsOpen}\n        onRequestClose={handleCloseEditModal}\n        selecteditem={selectedItem}\n        onSave={handleUpdate}\n      />\n      <TransactionModal\n        isOpen={transactionModalIsOpen}\n        onRequestClose={handleCloseTransactionModal}\n        itemId={selectedItemId}\n      />\n      <table>\n        <thead>\n          <tr>\n            <th>Product ID</th>\n            <th>Product Name</th>\n            <th>Category</th>\n            <th>Unit Price</th>\n            <th>Stock Level</th>\n            <th>Reorder Level</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n        {inventory.map((item) => {\n  const unitPrice = parseFloat(item.unit_price); // Convert unit_price to a number\n  return (\n    <tr key={item.id}> {/* Ensure the key is unique */}\n      <td>{item.id}</td>\n      <td>{item.name}</td>\n      <td>{item.category}</td>\n      <td>shs:{unitPrice ? unitPrice.toFixed(2) : 'N/A'}</td>\n      <td>{item.stock_level}</td>\n      <td>{item.reorder_level}</td>\n      <td>\n        <button className=\"actions-button\" onClick={() => handleView(item.id)}>View</button>\n        <button className=\"actions-button\" onClick={() => handleOpenEditModal(item)}>Edit</button>\n        <button className=\"actions-button\" onClick={() => handleDelete(item.id)}>Delete</button>\n      </td>\n    </tr>\n  );\n})}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default InventoryList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}